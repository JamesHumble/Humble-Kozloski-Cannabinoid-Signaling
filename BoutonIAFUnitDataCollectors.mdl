// =================================================================
// Licensed Materials - Property of IBM
//
// "Restricted Materials of IBM"
//
// BCM-YKT-07-18-2017
//
// (C) Copyright IBM Corp. 2005-2022  All rights reserved
//
// US Government Users Restricted Rights -
// Use, duplication or disclosure restricted by
// GSA ADP Schedule Contract with IBM Corp.
//
// =================================================================

#ifndef BOUTONIAFUNITDATACOLLECTORS_MDL
#define BOUTONIAFUNITDATACOLLECTORS_MDL
#include "../PointNeuronTools/PointNeuronTools.mdl"

Variable BoutonIAFUnitDataCollector
{
  string directory;
  string filePrep;
  string fileApp;
  string fileExt;
  int [] rows;
  int [] cols;
  int [] slices;
  int mxslice;
  double* [] neurotransmitter;
  double* [] availableNeurotransmitter;
  double* [] CB1R;
  double* [] CB1Runbound;
  double* [] CB1Rcurrent;
  double* [] MAGL;
  UserFunction getNodeIndices;

  // Flags
  bool op_saveNeurotransmitter;
  bool op_saveAvailableNeurotransmitter;
  bool op_saveCB1R;
  bool op_saveCB1Runbound;
  bool op_saveCB1Rcurrent;
  bool op_saveMAGL;
  
  Connection Pre Node () Expects NeurotransmitterIAFProducer, AvailableNeurotransmitterIAFProducer,
    CB1RIAFProducer, MAGLIAFProducer
  {
    NeurotransmitterIAFProducer.neurotransmitter >> neurotransmitter;
    AvailableNeurotransmitterIAFProducer.availableNeurotransmitter >> availableNeurotransmitter;
    CB1RIAFProducer.CB1R >> CB1R;
    CB1RIAFProducer.CB1Runbound >> CB1Runbound;
    CB1RIAFProducer.CB1Rcurrent >> CB1Rcurrent;
    MAGLIAFProducer.MAGL >> MAGL;
    getNodeIndices();
  }

  InitPhase initialize;
  TriggeredFunction dataCollection;
  FinalPhase finalize;
}

#endif
